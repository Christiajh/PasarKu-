swagger: "2.0"
info:
  title: SkillShare API
  description: A simple REST API for a skill-sharing platform.
  version: 1.0.0
host: localhost:8080 # Replace with your deployed host
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: "Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`"

paths:
  /register:
    post:
      summary: Register a new user
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserRegister'
      responses:
        201:
          description: User registered successfully
        400:
          description: Invalid request payload
        500:
          description: Internal server error

  /login:
    post:
      summary: Log in a user
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        200:
          description: Login successful
          schema:
            type: object
            properties:
              message:
                type: string
              token:
                type: string
        400:
          description: Invalid request payload
        401:
          description: Invalid credentials

  /classes:
    get:
      summary: Get all classes
      responses:
        200:
          description: Classes retrieved successfully
          schema:
            type: object
            properties:
              message:
                type: string
              classes:
                type: array
                items:
                  $ref: '#/definitions/Class'
        500:
          description: Internal server error
    post:
      summary: Create a new class
      security:
        - BearerAuth: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClassCreate'
      responses:
        201:
          description: Class created successfully
        400:
          description: Invalid request payload
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /classes/{id}:
    get:
      summary: Get class by ID
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Class retrieved successfully
          schema:
            type: object
            properties:
              message:
                type: string
              class:
                $ref: '#/definitions/Class'
        400:
          description: Invalid class ID
        404:
          description: Class not found
        500:
          description: Internal server error
    put:
      summary: Update a class
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClassUpdate'
      responses:
        200:
          description: Class updated successfully
        400:
          description: Invalid request payload or class ID
        401:
          description: Unauthorized
        404:
          description: Class not found
        500:
          description: Internal server error
    delete:
      summary: Delete a class
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Class deleted successfully
        400:
          description: Invalid class ID
        401:
          description: Unauthorized
        404:
          description: Class not found
        500:
          description: Internal server error

  /categories:
    get:
      summary: Get all categories
      responses:
        200:
          description: Categories retrieved successfully
          schema:
            type: object
            properties:
              message:
                type: string
              categories:
                type: array
                items:
                  $ref: '#/definitions/Category'
        500:
          description: Internal server error
    post:
      summary: Create a new category
      security:
        - BearerAuth: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CategoryCreate'
      responses:
        201:
          description: Category created successfully
        400:
          description: Invalid request payload
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /classes/{class_id}/enroll:
    post:
      summary: Enroll in a class
      security:
        - BearerAuth: []
      parameters:
        - name: class_id
          in: path
          required: true
          type: integer
      responses:
        201:
          description: Successfully enrolled in class
        400:
          description: Invalid class ID
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /enrollments:
    get:
      summary: Get user's enrollments
      security:
        - BearerAuth: []
      responses:
        200:
          description: User enrollments retrieved successfully
          schema:
            type: object
            properties:
              message:
                type: string
              enrollments:
                type: array
                items:
                  $ref: '#/definitions/Enrollment'
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /classes/{class_id}/unenroll:
    delete:
      summary: Unenroll from a class
      security:
        - BearerAuth: []
      parameters:
        - name: class_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successfully unenrolled from class
        400:
          description: Invalid class ID
        401:
          description: Unauthorized
        404:
          description: Enrollment not found
        500:
          description: Internal server error

definitions:
  UserRegister:
    type: object
    required:
      - name
      - email
      - password
    properties:
      name:
        type: string
      email:
        type: string
        format: email
      password:
        type: string
        format: password
  UserLogin:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
      password:
        type: string
        format: password
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
        format: email
  Class:
    type: object
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      description:
        type: string
      user_id:
        type: integer
        format: int64
      category_id:
        type: integer
        format: int64
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      deleted_at:
        type: string
        format: date-time
      user:
        $ref: '#/definitions/User'
      category:
        $ref: '#/definitions/Category'
  ClassCreate:
    type: object
    required:
      - title
      - description
      - category_id
    properties:
      title:
        type: string
      description:
        type: string
      category_id:
        type: integer
        format: int64
  ClassUpdate:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      category_id:
        type: integer
        format: int64
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  CategoryCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  Enrollment:
    type: object
    properties:
      id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
      class_id:
        type: integer
        format: int64
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
      deleted_at:
        type: string
        format: date-time
      user:
        $ref: '#/definitions/User'
      class:
        $ref: '#/definitions/Class'